{"version":3,"sources":["Components/NavBar.js","Components/CalidadAire.js","Components/CalidadAireActual.js","Components/Tabla.js","Components/Actual.js","Components/Instrucciones.js","Components/Home.js","Components/Login.js","Components/LoginAgain.js","Components/Paseo.js","Components/Grupos.js","Components/Form.js","Components/Crear.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","className","to","usuario","onClick","fetch","then","console","log","Aire","state","loading","calidadActual","response","json","data","aqi","this","setState","Component","AireActual","latitud","longitud","showPosition","bind","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","url","Home","scope","Instrucciones","class","Login","checkInput","linkInput1","React","createRef","linkInput2","value","setCustomValidity","action","method","ref","name","id","placeholder","type","onInput","Paseo","nombre","ruta","capacidad","numInscritas","puntoEncuentro","fecha","body","Grupos","paseos","map","d","key","Form","Date","month","getMonth","day","getDate","year","getFullYear","length","join","for","htmlFor","min","formatDate","required","Crear","App","useState","setPaseos","setErr","setUsuario","useEffect","HOST","window","location","origin","replace","ws","WebSocket","onopen","onmessage","msg","JSON","parse","res","err","stringify","path","component","exact","render","LoginAgain","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad9c50a0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\r\nimport './NavBar.css';\r\n\r\n\r\nconst NavBar =(props)=>{\r\n\r\nfunction salir(){\r\n    fetch(\"/logout\").then(console.log(\"Ya hizo logout\"))\r\n}\r\n\r\n  return(\r\n      <div className = \"NavBar\">\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"navbar-brand\"><Link className=\"nombres\" to=\"/\">Tu Mejor Ruta</Link></div>\r\n        <div className=\"navbar-brand\"><Link className=\"nombres\" to=\"/grupos\">Grupos</Link></div>\r\n        <div className=\"navbar-brand\"><Link className=\"nombres\" to=\"/crear\">Nuevo Grupo</Link></div>\r\n        {props.usuario!==\"No hay usuario\" ?\r\n        <div>\r\n            <div className=\"navbar-brand\"><Link className=\"nombres\" onClick={()=>salir()}>LogOut</Link></div>\r\n        </div>:\r\n        <div>\r\n            <div className=\"navbar-brand\"><Link className=\"nombres\" to=\"/login\">LogIn</Link></div>\r\n        </div>}\r\n    </nav>\r\n      </div>\r\n    )\r\n}\r\nexport default NavBar;","import React, { Component } from \"react\";\r\n\r\n\r\n\r\n\r\nclass Aire extends Component{\r\nstate={\r\n  loading:true,\r\n  calidadActual:null\r\n};\r\nasync componentDidMount(){\r\n  const url='https://api.waqi.info/feed/bogota/?token=dff319f47044fe2a774b924e794aead02b2d5e12';\r\n  const response=await fetch(url);\r\n  const data=await response.json();\r\n  console.log(data.data.aqi);\r\n  this.setState({calidadActual: data.data})\r\n  this.setState({loading:false})\r\n}\r\n\r\nrender(){\r\n  return(\r\n    <div>\r\n      {this.state.loading ? <div>Se esta cargando la informacion de la calidad del aire</div>:\r\n        <div>\r\n        Actualmente la calidad del aire en bogota es: {this.state.calidadActual.aqi}\r\n        </div>}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Aire;","import React, { Component } from \"react\";\r\n\r\n\r\n\r\n\r\nclass AireActual extends Component{\r\n\r\n constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n          loading:true,\r\n          calidadActual:null,\r\n          latitud:null,\r\n          longitud:null\r\n        };\r\n\r\n        this.showPosition=this.showPosition.bind(this);\r\n    }\r\nasync componentDidMount(){\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(this.showPosition);\r\n    }\r\n  else {\r\n    console.log(\"Geolocation is not supported by this browser.\");\r\n    }\r\n}\r\nasync showPosition(position){\r\n  console.log(\"Latitude: \" + position.coords.latitude +\r\n    \" Longitude: \" + position.coords.longitude);\r\n    this.setState({latitud: position.coords.latitude});\r\n    this.setState({longitud: position.coords.longitude})\r\n\r\n  const url='https://api.waqi.info/feed/geo:'+this.state.latitud+';'+this.state.longitud+'/?token=dff319f47044fe2a774b924e794aead02b2d5e12'\r\n  console.log('url'+url)\r\n  const response=await fetch(url);\r\n  const data=await response.json();\r\n  console.log(data.data.aqi);\r\n  this.setState({calidadActual: data.data})\r\n  this.setState({loading:false})\r\n}\r\n\r\n\r\n\r\nrender(){\r\n  return(\r\n    <div>\r\n      {this.state.loading ? <div>Se esta cargando la informacion de la calidad del aire</div>:\r\n        <div>\r\n          Actualmente la calidad en su lugar actual es: {this.state.calidadActual.aqi}\r\n        </div>}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AireActual;","import React from 'react';\r\nimport  './Tabla.css'\r\n\r\nconst Home =()=>{\r\n\r\n  return(\r\n    <div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">ICA</th>\r\n            <th scope=\"col\">Calidad del Aire</th>\r\n            <th scope=\"col\">Proteja su salud</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr className=\"uno\">\r\n            <td>0-50</td>\r\n            <td>Buena</td>\r\n            <td>No se anticipan impactos a la salud cuando la calidad del aire se encuentra en este intervalo.</td>\r\n          </tr>\r\n          <tr className=\"dos\">\r\n            <td>51-100</td>\r\n            <td>Moderada</td>\r\n            <td>Las personas extraordinariamente sensitivas deben considerar limitación de los esfuerzos físicos excesivos y prolongados al aire libre.</td>\r\n          </tr>\r\n          <tr className=\"tres\">\r\n            <td>101-150</td>\r\n            <td>Dañina a la Salud de los Grupos Sensitivos</td>\r\n            <td>Los niños y adultos activos, y personas con enfermedades respiratorias tales como el asma, deben evitar los esfuerzos físicos excesivos y prolongados al aire libre.</td>\r\n          </tr>\r\n          <tr className=\"cuatro\">\r\n            <td>151-200</td>\r\n            <td>Dañina a la Salud</td>\r\n            <td>Los niños y adultos activos, y personas con enfermedades respiratorias tales como el asma, deben evitar los esfuerzos excesivos prolongados al aire libre; las demás personas, especialmente los niños, deben limitar los esfuerzos físicos excesivos y prolongados al aire libre.</td>\r\n          </tr>\r\n          <tr className=\"cinco\">\r\n            <td>201-300</td>\r\n            <td>Muy Dañina a la Salud</td>\r\n            <td>Los niños y adultos activos, y personas con enfermedades respiratorias tales como el asma, deben evitar todos los esfuerzos excesivos al aire libre; las demás personas, especialmente los niños, deben limitar los esfuerzos físicos excesivos al aire libre.</td>\r\n          </tr>\r\n          <tr className=\"seis\">\r\n            <td>300+</td>\r\n            <td>Arriesgado</td>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    \t</div>\r\n    )\r\n}\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\nimport './Actual.css';\r\n\r\n\r\nclass Aire extends Component{\r\nstate={\r\n  actual:\"todavia no\",\r\n};\r\nasync componentDidMount(){\r\n  const url='/actual';\r\n  const response=await fetch(url);\r\n  const data=await response.json();\r\n  console.log(data)\r\n  this.setState({actual: data.actual})\r\n}\r\n\r\nrender(){\r\n  return(\r\n    <div >\r\n      <h2 className = \"titulo\">La actual es {this.state.actual}</h2>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Aire;","\r\nimport React from 'react';\r\n\r\n\r\nconst Instrucciones =(props)=>{\r\n\r\n  return(\r\n      <div class=\"text-center\">\r\n        <h1>Bienvenidos</h1>\r\n        <p>Nos interesa su seguridad y su salud. Por esto hemos desarrollado la aplicación donde podrá consultar rápidamente el estado actual de la calidad del aire de Bogotá (inicialmente se desarrolla la app para esta ciudad) además de la medición de la calidad de aire mas cercana a usted. </p>\r\n        <p>A todos ustedes que montan bicicleta les recomendamos siempre mirar el estado actual de donde estén. Así pueden tomar las medidas que consideren necesarias. Si van de paseo o si van al trabajo, siempre es mejor ir acompañado y consciente de las condiciones externas. </p>\r\n        <p>Para utilizar nuestra aplicación simplemente ve a la pestaña de Login y regístrate. Luego ingresa y a continuación pon grupos para buscar un grupo de ciclistas que compartan tu misma ruta o pon crear grupo para crear tu propia ruta. Selecciona todos los campos necesarios en caso de crear un nuevo grupo y permítenos ayudarte a encontrar compañeros de ruta. </p>\r\n        <p>Recuerda siempre verificar las condiciones de tu entorno antes de salir (las generales y las más cercanas a ti). Recuerda siempre llevar casco y viaja con precaución.</p>\r\n        <h1>Feliz día EnBici</h1>\r\n      </div>\r\n    )\r\n}\r\nexport default Instrucciones;","import React from 'react';\r\nimport  './Home.css'\r\nimport Aire from './CalidadAire'\r\nimport AireActual from './CalidadAireActual'\r\nimport Actual from './Actual'\r\nimport Tabla from './Tabla'\r\nimport Instrucciones from './Instrucciones'\r\nconst Home =()=>{\r\n\r\n  return(\r\n    <div>\r\n      <div className=\"jumbotron\"/>\r\n\r\n\r\n        <div className=\"container\">\r\n      \t<h1 className = \"tituloHome\">Bienvenidos a EnBici</h1>\r\n      \t <Aire/>\r\n         <AireActual/>\r\n         <Tabla/>\r\n         <Instrucciones/>\r\n        </div>\r\n\r\n    \t</div>\r\n    )\r\n}\r\nexport default Home;","import React from 'react';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        Login:false,\r\n    };\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n\r\n    this.checkInput = this.checkInput.bind(this);\r\n    this.linkInput1= React.createRef();\r\n    this.linkInput2 = React.createRef();\r\n  }\r\n\r\n\r\n  onClick(){\r\n    if(this.state.Login==true)\r\n    {\r\n      this.setState({Login:false})\r\n    }\r\n    else\r\n    {\r\n      this.setState({Login:true})\r\n    }\r\n  }\r\n\r\n  checkInput(){\r\n    if (this.linkInput1.value != this.linkInput2.value) {\r\n      this.linkInput2.setCustomValidity(\"Password Must be Matching.\");\r\n      } else {\r\n      // input is valid -- reset the error message\r\n        this.linkInput2.setCustomValidity(\"\");\r\n      }\r\n  }\r\n\r\nrender() {\r\n  return(\r\n      <div>\r\n        <h1 className =\"TituloLogin\">Inicia sesión para compartir tus paseos</h1>\r\n        {this.state.Login ?\r\n          <div>\r\n            <form action=\"/users\" method = \"POST\">\r\n              <div className=\"form-group\">\r\n                <label ref=\"name\">Ingrese su Usuario:</label>\r\n                <input className=\"form-control\" name=\"user\" id=\"name\" placeholder=\" Usuario\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label ref=\"password\">Ingrese su contraseña:</label>\r\n                <input className=\"form-control\" ref ={linkInput1 => this.linkInput1 = linkInput1} type =\"password\" name=\"password\" id=\"passwordOriginal\"  placeholder=\" Contraseña\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label ref=\"password\">Repita su contraseña:</label>\r\n                <input className=\"form-control\" ref ={linkInput2 => this.linkInput2 = linkInput2} onInput = {this.checkInput} type =\"password\" name=\"password\" id=\"password\" placeholder=\" Contraseña\"/>\r\n              </div>\r\n              <input className = \"btn\"type=\"submit\" value=\"Submit\"></input>\r\n            </form>\r\n          </div>:\r\n          <div>\r\n            <form action=\"/loginUsuario\" method = \"POST\">\r\n              <div className=\"form-group\">\r\n                <label ref=\"name\">Ingrese su Usuario:</label>\r\n                <input className=\"form-control\" name=\"user\" id=\"name\" placeholder=\" Usuario\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label ref=\"password\">Ingrese su contraseña:</label>\r\n                <input className=\"form-control\"name=\"password\" id=\"password\"  placeholder=\" Contraseña\"/>\r\n              </div>\r\n              <input className = \"btn\"type=\"submit\" value=\"Submit\"></input>\r\n            </form>\r\n          </div>}\r\n          <div class=\"text-center\">\r\n          {this.state.Login ?\r\n            <div><button onClick={this.onClick}>Ir a Login</button></div>:\r\n            <div><button onClick={this.onClick}>Ir a registro</button></div>}\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n}\r\nexport default Login;","import React from 'react';\r\nimport \"./LoginAgain.css\"\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        Login:false,\r\n    };\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n\r\n    this.checkInput = this.checkInput.bind(this);\r\n    this.linkInput1= React.createRef();\r\n    this.linkInput2 = React.createRef();\r\n  }\r\n\r\n\r\n  onClick(){\r\n    if(this.state.Login==true)\r\n    {\r\n      this.setState({Login:false})\r\n    }\r\n    else\r\n    {\r\n      this.setState({Login:true})\r\n    }\r\n  }\r\n\r\n  checkInput(){\r\n    if (this.linkInput1.value != this.linkInput2.value) {\r\n      this.linkInput2.setCustomValidity(\"Password Must be Matching.\");\r\n      } else {\r\n      // input is valid -- reset the error message\r\n        this.linkInput2.setCustomValidity(\"\");\r\n      }\r\n  }\r\n\r\nrender() {\r\n  return(\r\n      <div>\r\n        <h1 className =\"TituloLogin\">Inicia sesión para compartir tus paseos</h1>\r\n        {this.state.Login ?\r\n          <div>\r\n            <form action=\"/users\" method = \"POST\">\r\n              <div className=\"form-group\">\r\n                <label ref=\"name\">Ingrese su Usuario:</label>\r\n                <input className=\"form-control\" name=\"user\" id=\"name\" placeholder=\" Usuario\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label ref=\"password\">Ingrese su contraseña:</label>\r\n                <input className=\"form-control\" ref ={linkInput1 => this.linkInput1 = linkInput1} type =\"password\" name=\"password\" id=\"passwordOriginal\"  placeholder=\" Contraseña\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label ref=\"password\">Repita su contraseña:</label>\r\n                <input className=\"form-control\" ref ={linkInput2 => this.linkInput2 = linkInput2} onInput = {this.checkInput} type =\"password\" name=\"password\" id=\"password\" placeholder=\" Contraseña\"/>\r\n              </div>\r\n              <input className = \"btn\"type=\"submit\" value=\"Submit\"></input>\r\n            </form>\r\n          </div>:\r\n          <div>\r\n            <form action=\"/loginUsuario\" method = \"POST\">\r\n              <div className=\"form-group\">\r\n                <label ref=\"name\">Ingrese su Usuario:</label>\r\n                <input className=\"form-control\" name=\"user\" id=\"name\" placeholder=\" Usuario\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label ref=\"password\">Ingrese su contraseña:</label>\r\n                <p className=\"passwordFail\">La contraseña ingresada es incorrecta. Intente nuevamente.</p>\r\n                <input className=\"form-control\"name=\"password\" id=\"password\"  placeholder=\" Contraseña\"/>\r\n              </div>\r\n              <input className = \"btn\"type=\"submit\" value=\"Submit\"></input>\r\n            </form>\r\n          </div>}\r\n          <div class=\"text-center\">\r\n          {this.state.Login ?\r\n            <div><button onClick={this.onClick}>Ir a Login</button></div>:\r\n            <div><button onClick={this.onClick}>Ir a registro</button></div>}\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n}\r\nexport default Login;","import React from 'react';\r\nimport './Paseo.css';\r\n\r\nconst Paseo =(props)=>{\r\n\r\n\tconst inscribirse = () => {\r\n\t\tprops.numInscritas < props.capacidad ? \r\n\t\tfetch(\"/upDatePaseo\", {\r\n\t\t\tmethod:\"POST\",\r\n\t\t\tbody: {\r\n\t\t\t\tnombre: props.nombre,\r\n\t\t\t\tnumInscritas: props.numInscritas,\r\n\t\t\t},\r\n\t\t}).then(console.log(\"Se inscribio\")):\r\n\t\tconsole.log(\"Se acabaron los cupos\");\r\n\t}\r\n\t\r\n  return(\r\n      <div className = \"container TablaPaseo\">\r\n      \t<div className = \"row\">\r\n      \t\t<div className = \"col-md-12\">\r\n\t\t\t\t\t\t<p> {props.nombre} </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = \"row\">\r\n\t\t\t\t\t<div className = \"col-md-8\">\r\n\t\t\t\t\t\t<p> Ruta: {props.ruta} </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"col-md-4\">\r\n\t\t\t\t\t\t<p> Cupos disponibles: {props.capacidad-props.numInscritas} </p>\r\n\t\t\t\t\t</div>  \r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = \"row\">\r\n\t\t\t\t\t<div className = \"col-md-12\">\r\n\t\t\t\t\t\t<p> Punto de Encuentro: {props.puntoEncuentro} </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = \"row\">\r\n\t\t\t\t\t<div className = \"col-md-8\">\r\n\t\t\t\t\t\t<p> Fecha: {props.fecha} </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{props.usuario !== \"No hay usuario\"?\r\n\t\t\t\t\t<div className = \"col-md-4\">\r\n\t\t\t\t\t\t<button id=\"BotonInscribirse\" onClick={inscribirse}> Inscribirse </button>\r\n\t\t\t\t\t</div>:\r\n\t\t\t\t\t<div className = \"col-md-4\">\r\n\t\t\t\t\t\t<p> Debe iniciar sesión para inscribirse </p>\r\n\t\t\t\t\t</div>}\r\n\t\t\t\t</div>\r\n      </div>\r\n    )\r\n}\r\nexport default Paseo;","  \r\nimport React from 'react';\r\nimport Paseo from './Paseo.js';\r\nimport './Grupos.css';\r\n\r\nconst Grupos =(props)=>{\r\n\r\n  const renderPaseos = () => props.paseos.map(d => \r\n  \t<div>\r\n\t\t\t<Paseo key={d.nombre} capacidad = {d.capacidad} usuario = {props.usuario} nombre ={d.nombre} ruta = {d.ruta} fecha = {d.fecha} puntoEncuentro = {d.puntoEncuentro} numInscritas = {d.numInscritas} />\r\n\t\t\t<br/>\r\n  \t</div>)\r\n\t\r\n  return(\r\n      <div>\r\n        <div >\r\n          <h1 className = \"tituloGrupos\">Rutas Actuales</h1>\r\n          <br/>\r\n        </div>\r\n        <div class=\"ListaPaseos\">\r\n        \t{renderPaseos()}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\nexport default Grupos;","import React, { Component } from \"react\";\r\nimport  './Form.css'\r\n\r\n\r\nclass Form extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  formatDate() {\r\n    let d = new Date();\r\n    let month = \"\" + (d.getMonth() + 1);\r\n    let day = \"\" + d.getDate();\r\n    let year = d.getFullYear();\r\n\r\n    if (month.length < 2) {\r\n      month = \"0\" + month;\r\n    }\r\n    if (day.length < 2) {\r\n      day = \"0\" + day;\r\n    }\r\n    return [year, month, day].join(\"-\");\r\n  }\r\n\r\nrender(){\r\n  return(\r\n    <div>\r\n      <h1 className = \"tituloForm\"> Ingrese la información de su nuevo paseo </h1>\r\n      <br/>\r\n      <br/>\r\n      <form action = \"/crearPaseo\" method = \"POST\">\r\n        <div className=\"form-group\">\r\n          <label for=\"nombre\" >Ingrese el nombre del paseo:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"nombre\"  placeholder=\" Ingrese nombre\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label >Ingrese un punto de encuentro:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"puntoEncuentro\"  placeholder=\" Ingrese punto de encuentro\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label >Ingrese la descripción de la ruta:</label>\r\n          <input className=\"form-control\"  type=\"text\" name=\"ruta\" placeholder=\" Ingrese descripción de ruta\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label >Seleccione la cantidad máxima de personas:</label>\r\n          <input className=\"form-control\" type = \"number\" name=\"capacidad\" placeholder=\"Ingrese la capacidad máxima\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productName\">Seleccione la fecha de inicio: </label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"fecha\"\r\n            type=\"date\"\r\n            min={this.formatDate()}\r\n            ref=\"finishDate\"\r\n            required\r\n          />\r\n        </div>\r\n        <input type=\"hidden\" name=\"user\" value={this.props.usuario}/>\r\n\r\n        <input type=\"hidden\" name=\"numInscritas\" value=\"0\"/>\r\n\r\n        <input className = \"btn\" type=\"submit\" value=\"Enviar\"></input>\r\n      </form>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Form;","import React from 'react';\r\nimport Form from './Form';\r\n\r\nconst Crear =(props)=>{\r\n\r\n  return(\r\n      <div>\r\n        <Form usuario = {props.usuario}/>\r\n      </div>\r\n    )\r\n}\r\nexport default Crear;\r\n","import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport NavBar from './Components/NavBar'\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport Home from './Components/Home'\r\nimport Login from './Components/Login'\r\nimport LoginAgain from './Components/LoginAgain'\r\nimport Grupos from './Components/Grupos'\r\nimport Crear from './Components/Crear'\r\n\r\nfunction App() {\r\n  const [paseos, setPaseos] = useState([]);\r\n  const [err, setErr] = useState(\"\");\r\n  const [usuario, setUsuario] = useState(\"null\");\r\n\r\n  useEffect(()=> {\r\n    let HOST = window.location.origin.replace(/^http/, 'ws');\r\n    let ws = new WebSocket(HOST);\r\n\r\n    //const ws = new WebSocket(\"ws://localhost:3001\");\r\n    ws.onopen = () => {\r\n      console.log(\"Connected to ws\");\r\n\r\n      ws.onmessage = msg => {\r\n        setPaseos(JSON.parse(msg.data));\r\n        console.log(\"Got ws data\",msg);\r\n      };\r\n    };\r\n\r\n    getLocation();\r\n\r\n    fetch(\"paseos\")\r\n      .then(res => res.json())\r\n      .then( data => {\r\n        if(data.err) {\r\n          setErr(JSON.stringify(data.msg));\r\n        }\r\n        else{\r\n          setPaseos(data);\r\n        }\r\n      });\r\n\r\n    fetch(\"actual\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if(data !== \"No hay nada\")\r\n        {\r\n          let json = JSON.parse(data);\r\n          setUsuario(json[\"actual\"]);\r\n        }\r\n        else\r\n        {\r\n          setUsuario(\"No hay usuario\");\r\n        }\r\n      });\r\n  },[]);\r\n\r\n  function getLocation() {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(showPosition);\r\n    }\r\n  else {\r\n    console.log(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }\r\n\r\n  function showPosition(position) {\r\n    console.log(\"Latitude: \" + position.coords.latitude +\r\n    \" Longitude: \" + position.coords.longitude);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <div className=\"App\">\r\n          <div className=\"container\">\r\n            <NavBar usuario={usuario}/>\r\n            <Route path='/' component ={Home} exact/>\r\n            <Route path='logout' component ={Home}/>\r\n            <Route path='/grupos' render = {(props) => <Grupos {...props} usuario = {usuario} paseos = {paseos} />} />\r\n            <Route path='/login' component ={Login}/>\r\n            <Route path='/loginAgain' component ={LoginAgain}/>\r\n            <Route path='/crear' render = {(props) => <Crear {...props} usuario = {usuario} />}/>\r\n          </div>\r\n        </div>\r\n      </Switch>\r\n    </Router>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}