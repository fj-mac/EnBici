{"version":3,"sources":["Components/NavBar.js","Components/CalidadAire.js","Components/CalidadAireActual.js","Components/Home.js","Components/Login.js","Components/Paseo.js","Components/Grupos.js","Components/form.js","Components/Crear.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Aire","state","loading","calidadActual","fetch","response","json","data","console","log","aqi","this","setState","Component","AireActual","props","latitud","longitud","showPosition","bind","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","url","Home","Login","Paseo","id","nombre","ruta","numInscritas","puntoEncuentro","fecha","Grupos","class","paseos","map","d","key","form","Date","month","getMonth","day","getDate","year","getFullYear","length","join","placeholder","htmlFor","min","formatDate","ref","required","App","useState","setPaseos","setErr","useEffect","HOST","window","location","origin","replace","ws","WebSocket","onopen","onmessage","msg","JSON","parse","then","res","err","stringify","path","component","exact","render","Crear","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be6905e0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\r\nimport './NavBar.css';\r\n\r\n\r\nconst NavBar =()=>{\r\n  return(\r\n      <div className = \"NavBar\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <li className=\"navbar-brand\"><Link to=\"/\">Tu Mejor Ruta</Link></li>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        </button>\r\n        <li className=\"navbar-brand\"><Link to=\"/grupos\">Grupos</Link></li>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        </button>\r\n        <li className=\"navbar-brand\"><Link to=\"/crear\">Nuevo Grupo</Link></li>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        </button>\r\n        <li className=\"navbar-brand\"><Link to=\"/login\">Login</Link></li>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        </button>\r\n    </nav>\r\n      </div>\r\n    )\r\n}\r\nexport default NavBar;","import React, { Component } from \"react\";\r\n\r\n\r\n\r\n\r\nclass Aire extends Component{\r\nstate={\r\n  loading:true,\r\n  calidadActual:null\r\n};\r\nasync componentDidMount(){\r\n  const url='https://api.waqi.info/feed/bogota/?token=dff319f47044fe2a774b924e794aead02b2d5e12';\r\n  const response=await fetch(url);\r\n  const data=await response.json();\r\n  console.log(data.data.aqi);\r\n  this.setState({calidadActual: data.data})\r\n  this.setState({loading:false})\r\n}\r\n\r\nrender(){\r\n  return(\r\n    <div>\r\n      {this.state.loading ? <div>Se esta cargando la informacion de la calidad del aire</div>:\r\n        <div>\r\n        Actualmente la calidad del aire en bogota es: {this.state.calidadActual.aqi}\r\n        </div>}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Aire;","import React, { Component } from \"react\";\r\n\r\n\r\n\r\n\r\nclass AireActual extends Component{\r\n\r\n constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n          loading:true,\r\n          calidadActual:null,\r\n          latitud:null,\r\n          longitud:null\r\n        };\r\n\r\n        this.showPosition=this.showPosition.bind(this);\r\n    }\r\nasync componentDidMount(){\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(this.showPosition);\r\n    }\r\n  else {\r\n    console.log(\"Geolocation is not supported by this browser.\");\r\n    }\r\n}\r\nasync showPosition(position){\r\n  console.log(\"Latitude: \" + position.coords.latitude +\r\n    \" Longitude: \" + position.coords.longitude);\r\n    this.setState({latitud: position.coords.latitude});\r\n    this.setState({longitud: position.coords.longitude})\r\n\r\n  const url='https://api.waqi.info/feed/geo:'+this.state.latitud+';'+this.state.longitud+'/?token=dff319f47044fe2a774b924e794aead02b2d5e12'\r\n  console.log('url'+url)\r\n  const response=await fetch(url);\r\n  const data=await response.json();\r\n  console.log(data.data.aqi);\r\n  this.setState({calidadActual: data.data})\r\n  this.setState({loading:false})\r\n}\r\n\r\n\r\n\r\nrender(){\r\n  return(\r\n    <div>\r\n      {this.state.loading ? <div>Se esta cargando la informacion de la calidad del aire</div>:\r\n        <div>\r\n          Actualmente la calidad en su lugar actual es: {this.state.calidadActual.aqi}\r\n        </div>}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AireActual;","import React from 'react';\r\nimport  './Home.css'\r\nimport Aire from './CalidadAire'\r\nimport AireActual from './CalidadAireActual'\r\n\r\n\r\nconst Home =()=>{\r\n\r\n  return(\r\n    <div>\r\n      <div className=\"jumbotron\"/>\r\n      \t<h1>Bienvenidos a EnBici</h1>\r\n        <div className=\"container\">\r\n      \t <Aire/>\r\n         <AireActual/>\r\n        </div>\r\n    \t</div>\r\n    )\r\n}\r\nexport default Home;","import React from 'react';\r\n\r\n\r\nconst Login =()=>{\r\n  return(\r\n      <div>\r\n        <h1>Inicia sesión para compartir tus paseos</h1>\r\n      </div>\r\n    )\r\n}\r\nexport default Login;","import React from 'react';\r\nimport './Paseo.css';\r\n\r\nconst Paseo =(props)=>{\r\n\t\r\n  return(\r\n      <div className = \"container\" id= \"TablaPaseo\">\r\n      \t<div className = \"row\">\r\n      \t\t<div className = \"col-md-12\">\r\n\t\t\t\t\t\t<p> {props.nombre} </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = \"row\">\r\n\t\t\t\t\t<div className = \"col-md-8\">\r\n\t\t\t\t\t\t<p> Ruta: {props.ruta} </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"col-md-4\">\r\n\t\t\t\t\t\t<p> Participantes: {props.numInscritas} </p>\r\n\t\t\t\t\t</div>  \r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = \"row\">\r\n\t\t\t\t\t<div className = \"col-md-12\">\r\n\t\t\t\t\t\t<p> Punto de Encuentro: {props.puntoEncuentro} </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = \"row\">\r\n\t\t\t\t\t<div className = \"col-md-8\">\r\n\t\t\t\t\t\t<p> Fecha: {props.fecha} </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"col-md-4\">\r\n\t\t\t\t\t\t<button id=\"BotonInscribirse\"> Inscribirse </button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n      </div>\r\n    )\r\n}\r\nexport default Paseo;","  \r\nimport React from 'react';\r\nimport Paseo from './Paseo.js';\r\nimport './Grupos.css';\r\n\r\nconst Grupos =(props)=>{\r\n\r\n  const renderPaseos = () => props.paseos.map(d => \r\n  \t<div>\r\n\t\t\t<Paseo key={d.nombre} nombre ={d.nombre} ruta = {d.ruta} fecha = {d.fecha} puntoEncuentro = {d.puntoEncuentro} numInscritas = {d.numInscritas} />\r\n\t\t\t<br/>\r\n  \t</div>)\r\n\t\r\n  return(\r\n      <div>\r\n        <div className = \"titulo\">\r\n          <h1>Rutas Actuales</h1>\r\n          <br/>\r\n        </div>\r\n        <ul class=\"ListaPaseos\">\r\n        \t{renderPaseos()}\r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\nexport default Grupos;","import React, { Component } from \"react\";\r\nimport  './form.css'\r\n\r\n\r\nclass form extends Component{\r\nformatDate() {\r\n    let d = new Date();\r\n    let month = \"\" + (d.getMonth() + 1);\r\n    let day = \"\" + d.getDate();\r\n    let year = d.getFullYear();\r\n\r\n    if (month.length < 2) {\r\n      month = \"0\" + month;\r\n    }\r\n    if (day.length < 2) {\r\n      day = \"0\" + day;\r\n    }\r\n    return [year, month, day].join(\"-\");\r\n  }\r\n\r\nrender(){\r\n  return(\r\n    <div>\r\n      <h1> Ingrese la información de su nuevo paseo </h1>\r\n      <br/>\r\n      <br/>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label >Ingrese una pequeña descripción:</label>\r\n          <input className=\"form-control\"   placeholder=\" Ingrese descripción\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label >Ingrese un punto de encuentro:</label>\r\n          <input className=\"form-control\"   placeholder=\" Ingrese punto de encuentro\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label >Ingrese la descripción de la ruta:</label>\r\n          <input className=\"form-control\"   placeholder=\" Ingrese descripción de ruta\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label >Seleccione la cantidad máxima de personas:</label>\r\n          <select className=\"form-control\" id=\"exampleFormControlSelect1\">\r\n            <option>1</option>\r\n            <option>2</option>\r\n            <option>3</option>\r\n            <option>4</option>\r\n            <option>5</option>\r\n            <option>6</option>\r\n            <option>7</option>\r\n            <option>8</option>\r\n            <option>9</option>\r\n            <option>10</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"productName\">Seleccione la fecha de inicio: </label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"date\"\r\n              min={this.formatDate()}\r\n              ref=\"finishDate\"\r\n              required\r\n            />\r\n          </div>\r\n      </form>\r\n    </div>\r\n    )\r\n}\r\n}\r\nexport default form;","import React from 'react';\r\nimport FormUsuario from './form'\r\n\r\nconst Grupos =()=>{\r\n\r\n\r\n\r\n  return(\r\n      <div>\r\n        <FormUsuario/>\r\n      </div>\r\n    )\r\n}\r\nexport default Grupos;\r\n","import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport NavBar from './Components/NavBar'\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport Home from './Components/Home'\r\nimport Login from './Components/Login'\r\nimport Grupos from './Components/Grupos'\r\nimport Crear from './Components/Crear'\r\n\r\nfunction App() {\r\n  const [paseos, setPaseos] = useState([]);\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  useEffect(()=> {\r\n    let HOST = window.location.origin.replace(/^http/, 'ws');\r\n    let ws = new WebSocket(HOST);\r\n\r\n    //const ws = new WebSocket(\"ws://localhost:3001\");\r\n    ws.onopen = () => {\r\n      console.log(\"Connected to ws\");\r\n\r\n      ws.onmessage = msg => {\r\n        setPaseos(JSON.parse(msg.data));\r\n        console.log(\"Got ws data\",msg);\r\n      };\r\n    };\r\n\r\n    getLocation();\r\n\r\n    fetch(\"paseos\")\r\n      .then(res => res.json())\r\n      .then( data => {\r\n        if(data.err) {\r\n          setErr(JSON.stringify(data.msg));\r\n        }\r\n        else{\r\n          setPaseos(data);\r\n        }\r\n      });\r\n  },[]);\r\n\r\n  function getLocation() {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(showPosition);\r\n    }\r\n  else {\r\n    console.log(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }\r\n\r\n  function showPosition(position) {\r\n    console.log(\"Latitude: \" + position.coords.latitude +\r\n    \" Longitude: \" + position.coords.longitude);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <div className=\"App\">\r\n          <div className=\"container\">\r\n            <NavBar/>\r\n          </div>\r\n          <Route path='/' component ={Home} exact/>\r\n          <div className=\"container\">\r\n            <Route path='/grupos' render = {(props) => <Grupos {...props} paseos = {paseos} />} />\r\n            <Route path='/login' component ={Login}/>\r\n            <Route path='/crear' component ={Crear}/>\r\n          </div>\r\n        </div>\r\n      </Switch>\r\n    </Router>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}